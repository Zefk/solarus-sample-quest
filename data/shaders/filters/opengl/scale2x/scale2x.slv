uniform vec4 mmTextureSize;

varying vec4 vTexCoord; // Passed to fragment
varying vec4 B; // Passed to fragment
varying vec4 D; // Passed to fragment
varying vec4 F; // Passed to fragment
varying vec4 H; // Passed to fragment


void main(void)
{
	vec4 offsetx;
	vec4 offsety;

	offsetx = vec4(1.0/mmTextureSize.x, 0, 0, 0);
	offsety = vec4(0, 1.0/mmTextureSize.y, 0, 0);

	B = gl_MultiTexCoord0 - offsety;
	D = gl_MultiTexCoord0 - offsetx;
	F = gl_MultiTexCoord0 + offsetx;
	H = gl_MultiTexCoord0 + offsety;

	vTexCoord = gl_MultiTexCoord0;
	gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;
}
